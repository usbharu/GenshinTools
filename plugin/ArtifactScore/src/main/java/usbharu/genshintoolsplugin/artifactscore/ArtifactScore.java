package usbharu.genshintoolsplugin.artifactscore;

import usbharu.genshintools.gui.IContentPane;
import usbharu.genshintools.main.Main;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ArtifactScore implements IContentPane {
	private JPanel contentPane;
	private JFormattedTextField CriticalRateInput;
	private JFormattedTextField CriticalDamageInput;
	private JFormattedTextField ATKInput;
	private JTextField scoreField;
	private JButton backButton;

	private float score;

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	public ArtifactScore() {
		CriticalRateInput.addActionListener(new ActionListener() {
			/**
			 * Invoked when an action occurs.
			 *
			 * @param e the event to be processed
			 */
			@Override
			public void actionPerformed(ActionEvent e) {
				calArtifactScore();
				setArtifactScore();
			}
		});
		CriticalDamageInput.addActionListener(new ActionListener() {
			/**
			 * Invoked when an action occurs.
			 *
			 * @param e the event to be processed
			 */
			@Override
			public void actionPerformed(ActionEvent e) {
				calArtifactScore();
				setArtifactScore();
			}
		});
		ATKInput.addActionListener(new ActionListener() {
			/**
			 * Invoked when an action occurs.
			 *
			 * @param e the event to be processed
			 */
			@Override
			public void actionPerformed(ActionEvent e) {
				calArtifactScore();
				setArtifactScore();
			}
		});
		backButton.addActionListener(new ActionListener() {
			/**
			 * Invoked when an action occurs.
			 *
			 * @param e the event to be processed
			 */
			@Override
			public void actionPerformed(ActionEvent e) {
				Main.main();
			}
		});
	}

	void calArtifactScore() {
		score = ArtifactScoreCal.artifactSore(Float.parseFloat(CriticalRateInput.getText()), Float.parseFloat(CriticalDamageInput.getText()), Float.parseFloat(ATKInput.getText()));
	}

	void setArtifactScore() {
		scoreField.setText(String.valueOf(score));
	}

	@Override
	public JPanel getContentPane() {
		return contentPane;
	}

	@Override
	public String getName() {
		return "Artifact Score";
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		contentPane = new JPanel();
		contentPane.setLayout(new GridBagLayout());
		final JLabel label1 = new JLabel();
		label1.setText("Artifact Score");
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		contentPane.add(label1, gbc);
		final JPanel spacer1 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		contentPane.add(spacer1, gbc);
		CriticalRateInput = new JFormattedTextField();
		CriticalRateInput.setColumns(8);
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		contentPane.add(CriticalRateInput, gbc);
		final JLabel label2 = new JLabel();
		label2.setText("CriticalRate");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.anchor = GridBagConstraints.WEST;
		contentPane.add(label2, gbc);
		final JLabel label3 = new JLabel();
		label3.setText("CriticalDamage");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.WEST;
		contentPane.add(label3, gbc);
		CriticalDamageInput = new JFormattedTextField();
		CriticalDamageInput.setColumns(8);
		CriticalDamageInput.setText("");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		contentPane.add(CriticalDamageInput, gbc);
		final JLabel label4 = new JLabel();
		label4.setText("ATK %");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 3;
		gbc.anchor = GridBagConstraints.WEST;
		contentPane.add(label4, gbc);
		ATKInput = new JFormattedTextField();
		ATKInput.setColumns(8);
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 3;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		contentPane.add(ATKInput, gbc);
		scoreField = new JTextField();
		scoreField.setColumns(8);
		scoreField.setEditable(false);
		gbc = new GridBagConstraints();
		gbc.gridx = 4;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		contentPane.add(scoreField, gbc);
		final JLabel label5 = new JLabel();
		label5.setText("Score");
		gbc = new GridBagConstraints();
		gbc.gridx = 3;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.WEST;
		contentPane.add(label5, gbc);
		backButton = new JButton();
		backButton.setText("Back");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		contentPane.add(backButton, gbc);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return contentPane;
	}

}