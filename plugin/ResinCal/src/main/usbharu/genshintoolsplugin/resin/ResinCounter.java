package usbharu.genshintoolsplugin.resin;

import usbharu.genshintools.gui.IContentPane;
import usbharu.genshintools.main.Main;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;

/**
 * 樹脂の数と時間を計算するguiのコントローラー
 *
 * @author main.usbharu
 * @version 1.0.0
 * @since 1.0.0
 */
public class ResinCounter implements IContentPane {
	public JPanel contentPane;
	private JFormattedTextField resinInput;
	private JFormattedTextField timeInput;
	private JLabel resin;
	private JLabel time;
	private JLabel allow;
	private JButton backButton;

	public ResinCounter() {
		$$$setupUI$$$();
		resinInput.addActionListener(new ActionListener() {
			/**
			 * Invoked when an action occurs.
			 *
			 * @param e the event to be processed
			 */
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					timeInput.setText(String.valueOf(ResinCalculate.convertIntoTime(Integer.parseInt(resinInput.getText()))));
				} catch (NumberFormatException numberFormatException) {
					numberFormatException.printStackTrace();
				}
			}
		});
		timeInput.addActionListener(new ActionListener() {
			/**
			 * Invoked when an action occurs.
			 *
			 * @param e the event to be processed
			 */
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					resinInput.setText(String.valueOf(ResinCalculate.convertIntoResin(Integer.parseInt(timeInput.getText()))));
				} catch (NumberFormatException numberFormatException) {
					numberFormatException.printStackTrace();
				}
			}
		});
		backButton.addActionListener(new ActionListener() {
			/**
			 * Invoked when an action occurs.
			 *
			 * @param e the event to be processed
			 */
			@Override
			public void actionPerformed(ActionEvent e) {
				Main.main();
			}
		});
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		createUIComponents();
		contentPane = new JPanel();
		contentPane.setLayout(new BorderLayout(0, 0));
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new BorderLayout(0, 0));
		contentPane.add(panel1, BorderLayout.CENTER);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridBagLayout());
		panel1.add(panel2, BorderLayout.CENTER);
		allow = new JLabel();
		allow.setText("↔");
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.weighty = 1.0;
		panel2.add(allow, gbc);
		resinInput.setColumns(10);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(resinInput, gbc);
		timeInput.setColumns(10);
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 1;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(timeInput, gbc);
		resin = new JLabel();
		resin.setText("Resin・樹脂");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		panel2.add(resin, gbc);
		time = new JLabel();
		time.setText("Time(minute)・時間(分)");
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 0;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		panel2.add(time, gbc);
		backButton = new JButton();
		backButton.setText("back");
		panel1.add(backButton, BorderLayout.NORTH);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return contentPane;
	}

	private void createUIComponents() {
		resinInput = new JFormattedTextField(NumberFormat.getNumberInstance());
		timeInput = new JFormattedTextField(NumberFormat.getNumberInstance());
	}

	@Override
	public JPanel getContentPane() {
		return contentPane;
	}

	@Override
	public String getName() {
		return "Resin";
	}
}